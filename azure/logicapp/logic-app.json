{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "triggers": {
        "manual": {
            "type": "Request",
            "kind": "Http",
            "inputs": {
                "schema": {
                    "properties": {
                        "startTime": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "description": "You can update request schema to pass in custom values for actions to be executed."
        }
    },
    "actions": {
        "Condition": {
            "actions": {},
            "runAfter": {
                "Until_Parquet_Job": [
                    "Succeeded"
                ]
            },
            "else": {
                "actions": {
                    "Terminate_Job_Parquet": {
                        "runAfter": {},
                        "type": "Terminate",
                        "inputs": {
                            "runError": {
                                "code": "@variables('state')"
                            },
                            "runStatus": "Failed"
                        }
                    }
                }
            },
            "expression": {
                "and": [
                    {
                        "equals": [
                            "@variables('state')",
                            "success"
                        ]
                    }
                ]
            },
            "type": "If"
        },
        "Initialize_variable_id": {
            "runAfter": {
                "Primary_actions": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "id",
                        "type": "Integer",
                        "value": "@body('Parse_JSON_Parquet_Data')?['id']"
                    }
                ]
            }
        },
        "Initialize_variable_status": {
            "runAfter": {
                "Initialize_variable_id": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "state",
                        "type": "String",
                        "value": "@body('Parse_JSON_Parquet_Data')?['state']"
                    }
                ]
            }
        },
        "Compose_id_parquet_data": {
            "runAfter": {
                "Initialize_variable_status": [
                    "Succeeded"
                ]
            },
            "type": "Compose",
            "inputs": "@variables('id')"
        },
        "Primary_actions": {
            "actions": {
                "Parquet_Data_Job": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                        "authentication": {
                            "password": "Terraform123!",
                            "type": "Basic",
                            "username": "devfest"
                        },
                        "body": {
                            "args": [
                                "wasb:///tmp/input_movie_metadata.csv",
                                "wasb:///tmp/parquetData"
                            ],
                            "className": "SparkSimpleApp.ParquetFilm",
                            "file": "wasb:///tmp/SparkSimpleApp.jar"
                        },
                        "headers": {
                            "Content-Type": "application/json",
                            "X-Requested-By": "admin"
                        },
                        "method": "POST",
                        "uri": "https://devfest.azurehdinsight.net/livy/batches"
                    }
                },
                "Parse_JSON_Parquet_Data": {
                    "runAfter": {
                        "Parquet_Data_Job": [
                            "Succeeded"
                        ]
                    },
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('Parquet_Data_Job')",
                        "schema": {
                            "properties": {
                                "appId": {},
                                "appInfo": {
                                    "properties": {
                                        "driverLogUrl": {},
                                        "sparkUiUrl": {}
                                    },
                                    "type": "object"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "log": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "state": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "runAfter": {},
            "type": "Scope",
            "description": "Default actions to be executed at the time specified."
        },
        "Secondary_actions": {
            "actions": {
                "Filter_Film_Job": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                        "authentication": {
                            "password": "Terraform123!",
                            "type": "Basic",
                            "username": "devfest"
                        },
                        "body": {
                            "args": [
                                "wasb:///tmp/parquetData",
                                "wasb:///tmp/processedData",
                                "Leone"
                            ],
                            "className": "SparkSimpleApp.FilterFilm",
                            "file": "wasb:///tmp/SparkSimpleApp.jar"
                        },
                        "headers": {
                            "Content-Type": "application/json",
                            "X-Requested-By": "admin"
                        },
                        "method": "POST",
                        "uri": "https://devfest.azurehdinsight.net/livy/batches"
                    }
                },
                "Parse_JSON_Filter_Film": {
                    "runAfter": {
                        "Filter_Film_Job": [
                            "Succeeded"
                        ]
                    },
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('Filter_Film_Job')",
                        "schema": {
                            "properties": {
                                "appId": {},
                                "appInfo": {
                                    "properties": {
                                        "driverLogUrl": {},
                                        "sparkUiUrl": {}
                                    },
                                    "type": "object"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "log": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "state": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "runAfter": {
                "Condition": [
                    "Succeeded"
                ]
            },
            "type": "Scope",
            "description": "Default actions to be executed at the time specified."
        },
        "Set_variable_id_filter_film_job": {
            "runAfter": {
                "Secondary_actions": [
                    "Succeeded"
                ]
            },
            "type": "SetVariable",
            "inputs": {
                "name": "id",
                "value": "@body('Parse_JSON_Filter_Film')?['id']"
            }
        },
        "Set_variable_status_filter_film_job": {
            "runAfter": {
                "Set_variable_id_filter_film_job": [
                    "Succeeded"
                ]
            },
            "type": "SetVariable",
            "inputs": {
                "name": "state",
                "value": "@body('Parse_JSON_Filter_Film')?['state']"
            }
        },
        "Compose_ID_Filter_Job": {
            "runAfter": {
                "Set_variable_status_filter_film_job": [
                    "Succeeded"
                ]
            },
            "type": "Compose",
            "inputs": "@variables('id')"
        },
        "Until_Filter_Job": {
            "actions": {
                "Delay_Filter_Job": {
                    "runAfter": {
                        "Set_variable_State": [
                            "Succeeded"
                        ]
                    },
                    "type": "Wait",
                    "inputs": {
                        "interval": {
                            "count": 30,
                            "unit": "Second"
                        }
                    }
                },
                "HTTP_Filter_Job": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                        "authentication": {
                            "password": "Terraform123!",
                            "type": "Basic",
                            "username": "devfest"
                        },
                        "method": "GET",
                        "uri": "https://devfest.azurehdinsight.net/livy/batches/@{outputs('Compose_ID_Filter_Job')}/state"
                    }
                },
                "Parse_JSON_Filter_Job": {
                    "runAfter": {
                        "HTTP_Filter_Job": [
                            "Succeeded"
                        ]
                    },
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('HTTP_Filter_Job')",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "state": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "Set_variable_State": {
                    "runAfter": {
                        "Parse_JSON_Filter_Job": [
                            "Succeeded"
                        ]
                    },
                    "type": "SetVariable",
                    "inputs": {
                        "name": "state",
                        "value": "@body('Parse_JSON_Filter_Job')?['state']"
                    }
                }
            },
            "runAfter": {
                "Compose_ID_Filter_Job": [
                    "Succeeded"
                ]
            },
            "expression": "@equals(variables('state'), 'success')",
            "limit": {
                "count": 60,
                "timeout": "PT1H"
            },
            "type": "Until"
        },
        "Until_Parquet_Job": {
            "actions": {
                "Delay": {
                    "runAfter": {
                        "Set_variable_Parquet_State": [
                            "Succeeded"
                        ]
                    },
                    "type": "Wait",
                    "inputs": {
                        "interval": {
                            "count": 30,
                            "unit": "Second"
                        }
                    }
                },
                "Get_Livy_Status_Parquet": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                        "authentication": {
                            "password": "Terraform123!",
                            "type": "Basic",
                            "username": "devfest"
                        },
                        "method": "GET",
                        "uri": "https://devfest.azurehdinsight.net/livy/batches/@{outputs('Compose_id_parquet_data')}/state"
                    }
                },
                "Parse_JSON_Parquet": {
                    "runAfter": {
                        "Get_Livy_Status_Parquet": [
                            "Succeeded"
                        ]
                    },
                    "type": "ParseJson",
                    "inputs": {
                        "content": "@body('Get_Livy_Status_Parquet')",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "state": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "Set_variable_Parquet_State": {
                    "runAfter": {
                        "Parse_JSON_Parquet": [
                            "Succeeded"
                        ]
                    },
                    "type": "SetVariable",
                    "inputs": {
                        "name": "state",
                        "value": "@body('Parse_JSON_Parquet')?['state']"
                    }
                }
            },
            "runAfter": {
                "Compose_id_parquet_data": [
                    "Succeeded"
                ]
            },
            "expression": "@equals(variables('state'), 'success')",
            "limit": {
                "count": 60,
                "timeout": "PT1H"
            },
            "type": "Until"
        },
        "Condition_Filter_Job": {
            "actions": {},
            "runAfter": {
                "Until_Filter_Job": [
                    "Succeeded"
                ]
            },
            "else": {
                "actions": {
                    "Terminate_Job": {
                        "runAfter": {},
                        "type": "Terminate",
                        "inputs": {
                            "runError": {
                                "code": "@variables('state')"
                            },
                            "runStatus": "Failed"
                        }
                    }
                }
            },
            "expression": {
                "and": [
                    {
                        "equals": [
                            "@variables('state')",
                            "success"
                        ]
                    }
                ]
            },
            "type": "If"
        }
    },
    "outputs": {}
}